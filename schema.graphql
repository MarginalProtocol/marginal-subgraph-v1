type Factory @entity {
  # factory address
  id: ID!
  # deployer address
  deployer: ID!
  # uni v3 factory address
  uniV3Factory: ID!
  # observation cardinality min
  minCardinality: BigInt!
  # amount of pools created
  poolCount: BigInt!
  # amount of all time transactions
  txCount: BigInt!
  # factory owner
  owner: ID!
  # pools deployed by factory
  pools: [Pool!]! @derivedFrom(field: "factory")
}

type Pool @entity {
  # pool address
  id: ID!
  # factory address
  factory: Factory!
  # oracle address:
  oracle: ID!
  # created timestamp
  createdAtTimestamp: BigInt!
  # created block number
  createdAtBlockNumber: BigInt!
  # token0
  token0: Token!
  # token1
  token1: Token!
  # all time number of transactions
  txCount: BigInt!
  # fee
  fee: BigInt!
  # reward
  reward: BigInt!
  # liquidity locked
  liquidityLocked: BigInt!
  # positions held on pool
  positions: [Position!]! @derivedFrom(field: "pool")
}

type Token @entity {
  # token address
  id: ID!
  # token symbol
  symbol: String!
  # token name
  name: String!
  # token decimals
  decimals: BigInt!
}

type Position @entity {
  # position nft id
  id: ID!
  # owner of position
  owner: ID!
  # pool address of position
  pool: Pool!
  # margin
  margin: BigInt!
  # created at block number
  blockNumber: BigInt!
  # created at timestamp
  timestamp: BigInt!
  # created at tx hash
  transaction: Transaction!
}

type Transaction @entity {
  # tx hash
  id: ID!
  # block txn was included in
  blockNumber: BigInt!
  # timestamp txn was confirmed
  timestamp: BigInt!
  # gas settings during tx execution
  gasLimit: BigInt!
  gasPrice: BigInt!
  # derived values
  # open: [Open!]! @derivedFrom(field: "transaction")
  # adjust: [Adjust!]! @derivedFrom(field: "transaction")
  # settle: [Settle!]! @derivedFrom(field: "transaction")
  ## TODO: Add Liquidate, Swap, Mint, Burn
}
