// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class Burn extends ethereum.Event {
  get params(): Burn__Params {
    return new Burn__Params(this);
  }
}

export class Burn__Params {
  _event: Burn;

  constructor(event: Burn) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amountIn(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amountOut(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get rewards(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class Free extends ethereum.Event {
  get params(): Free__Params {
    return new Free__Params(this);
  }
}

export class Free__Params {
  _event: Free;

  constructor(event: Free) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get marginAfter(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Ignite extends ethereum.Event {
  get params(): Ignite__Params {
    return new Ignite__Params(this);
  }
}

export class Ignite__Params {
  _event: Ignite;

  constructor(event: Ignite) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amountOut(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get rewards(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Lock extends ethereum.Event {
  get params(): Lock__Params {
    return new Lock__Params(this);
  }
}

export class Lock__Params {
  _event: Lock;

  constructor(event: Lock) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get marginAfter(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Mint extends ethereum.Event {
  get params(): Mint__Params {
    return new Mint__Params(this);
  }
}

export class Mint__Params {
  _event: Mint;

  constructor(event: Mint) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get positionId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get size(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get debt(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get margin(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get fees(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get rewards(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class MarginalV1NonfungiblePositionManager__freeInputParamsStruct extends ethereum.Tuple {
  get token0(): Address {
    return this[0].toAddress();
  }

  get token1(): Address {
    return this[1].toAddress();
  }

  get maintenance(): i32 {
    return this[2].toI32();
  }

  get oracle(): Address {
    return this[3].toAddress();
  }

  get tokenId(): BigInt {
    return this[4].toBigInt();
  }

  get marginOut(): BigInt {
    return this[5].toBigInt();
  }

  get recipient(): Address {
    return this[6].toAddress();
  }

  get deadline(): BigInt {
    return this[7].toBigInt();
  }
}

export class MarginalV1NonfungiblePositionManager__igniteResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getAmountOut(): BigInt {
    return this.value0;
  }

  getRewards(): BigInt {
    return this.value1;
  }
}

export class MarginalV1NonfungiblePositionManager__igniteInputParamsStruct extends ethereum.Tuple {
  get token0(): Address {
    return this[0].toAddress();
  }

  get token1(): Address {
    return this[1].toAddress();
  }

  get maintenance(): i32 {
    return this[2].toI32();
  }

  get oracle(): Address {
    return this[3].toAddress();
  }

  get tokenId(): BigInt {
    return this[4].toBigInt();
  }

  get amountOutMinimum(): BigInt {
    return this[5].toBigInt();
  }

  get recipient(): Address {
    return this[6].toAddress();
  }

  get deadline(): BigInt {
    return this[7].toBigInt();
  }
}

export class MarginalV1NonfungiblePositionManager__positionsResult {
  value0: Address;
  value1: BigInt;
  value2: boolean;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: boolean;
  value8: boolean;
  value9: BigInt;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: boolean,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: boolean,
    value8: boolean,
    value9: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromBoolean(this.value7));
    map.set("value8", ethereum.Value.fromBoolean(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    return map;
  }

  getPool(): Address {
    return this.value0;
  }

  getPositionId(): BigInt {
    return this.value1;
  }

  getZeroForOne(): boolean {
    return this.value2;
  }

  getSize(): BigInt {
    return this.value3;
  }

  getDebt(): BigInt {
    return this.value4;
  }

  getMargin(): BigInt {
    return this.value5;
  }

  getSafeMarginMinimum(): BigInt {
    return this.value6;
  }

  getLiquidated(): boolean {
    return this.value7;
  }

  getSafe(): boolean {
    return this.value8;
  }

  getRewards(): BigInt {
    return this.value9;
  }
}

export class MarginalV1NonfungiblePositionManager extends ethereum.SmartContract {
  static bind(address: Address): MarginalV1NonfungiblePositionManager {
    return new MarginalV1NonfungiblePositionManager(
      "MarginalV1NonfungiblePositionManager",
      address
    );
  }

  WETH9(): Address {
    let result = super.call("WETH9", "WETH9():(address)", []);

    return result[0].toAddress();
  }

  try_WETH9(): ethereum.CallResult<Address> {
    let result = super.tryCall("WETH9", "WETH9():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  balanceOf(owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  factory(): Address {
    let result = super.call("factory", "factory():(address)", []);

    return result[0].toAddress();
  }

  try_factory(): ethereum.CallResult<Address> {
    let result = super.tryCall("factory", "factory():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  free(
    params: MarginalV1NonfungiblePositionManager__freeInputParamsStruct
  ): BigInt {
    let result = super.call(
      "free",
      "free((address,address,uint24,address,uint256,uint128,address,uint256)):(uint256)",
      [ethereum.Value.fromTuple(params)]
    );

    return result[0].toBigInt();
  }

  try_free(
    params: MarginalV1NonfungiblePositionManager__freeInputParamsStruct
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "free",
      "free((address,address,uint24,address,uint256,uint128,address,uint256)):(uint256)",
      [ethereum.Value.fromTuple(params)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getApproved(tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ignite(
    params: MarginalV1NonfungiblePositionManager__igniteInputParamsStruct
  ): MarginalV1NonfungiblePositionManager__igniteResult {
    let result = super.call(
      "ignite",
      "ignite((address,address,uint24,address,uint256,uint256,address,uint256)):(uint256,uint256)",
      [ethereum.Value.fromTuple(params)]
    );

    return new MarginalV1NonfungiblePositionManager__igniteResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_ignite(
    params: MarginalV1NonfungiblePositionManager__igniteInputParamsStruct
  ): ethereum.CallResult<MarginalV1NonfungiblePositionManager__igniteResult> {
    let result = super.tryCall(
      "ignite",
      "ignite((address,address,uint24,address,uint256,uint256,address,uint256)):(uint256,uint256)",
      [ethereum.Value.fromTuple(params)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MarginalV1NonfungiblePositionManager__igniteResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  isApprovedForAll(owner: Address, operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    owner: Address,
    operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ownerOf(tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  positions(
    tokenId: BigInt
  ): MarginalV1NonfungiblePositionManager__positionsResult {
    let result = super.call(
      "positions",
      "positions(uint256):(address,uint96,bool,uint128,uint128,uint128,uint128,bool,bool,uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return new MarginalV1NonfungiblePositionManager__positionsResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBoolean(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBoolean(),
      result[8].toBoolean(),
      result[9].toBigInt()
    );
  }

  try_positions(
    tokenId: BigInt
  ): ethereum.CallResult<
    MarginalV1NonfungiblePositionManager__positionsResult
  > {
    let result = super.tryCall(
      "positions",
      "positions(uint256):(address,uint96,bool,uint128,uint128,uint128,uint128,bool,bool,uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MarginalV1NonfungiblePositionManager__positionsResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBoolean(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBoolean(),
        value[8].toBoolean(),
        value[9].toBigInt()
      )
    );
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenURI(tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenURI(tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  uniswapV3Factory(): Address {
    let result = super.call(
      "uniswapV3Factory",
      "uniswapV3Factory():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_uniswapV3Factory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "uniswapV3Factory",
      "uniswapV3Factory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _factory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _WETH9(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenDescriptor_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class BurnCall extends ethereum.Call {
  get inputs(): BurnCall__Inputs {
    return new BurnCall__Inputs(this);
  }

  get outputs(): BurnCall__Outputs {
    return new BurnCall__Outputs(this);
  }
}

export class BurnCall__Inputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }

  get params(): BurnCallParamsStruct {
    return changetype<BurnCallParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class BurnCall__Outputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }

  get amountIn(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get amountOut(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }

  get rewards(): BigInt {
    return this._call.outputValues[2].value.toBigInt();
  }
}

export class BurnCallParamsStruct extends ethereum.Tuple {
  get token0(): Address {
    return this[0].toAddress();
  }

  get token1(): Address {
    return this[1].toAddress();
  }

  get maintenance(): i32 {
    return this[2].toI32();
  }

  get oracle(): Address {
    return this[3].toAddress();
  }

  get tokenId(): BigInt {
    return this[4].toBigInt();
  }

  get recipient(): Address {
    return this[5].toAddress();
  }

  get deadline(): BigInt {
    return this[6].toBigInt();
  }
}

export class FreeCall extends ethereum.Call {
  get inputs(): FreeCall__Inputs {
    return new FreeCall__Inputs(this);
  }

  get outputs(): FreeCall__Outputs {
    return new FreeCall__Outputs(this);
  }
}

export class FreeCall__Inputs {
  _call: FreeCall;

  constructor(call: FreeCall) {
    this._call = call;
  }

  get params(): FreeCallParamsStruct {
    return changetype<FreeCallParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class FreeCall__Outputs {
  _call: FreeCall;

  constructor(call: FreeCall) {
    this._call = call;
  }

  get margin(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class FreeCallParamsStruct extends ethereum.Tuple {
  get token0(): Address {
    return this[0].toAddress();
  }

  get token1(): Address {
    return this[1].toAddress();
  }

  get maintenance(): i32 {
    return this[2].toI32();
  }

  get oracle(): Address {
    return this[3].toAddress();
  }

  get tokenId(): BigInt {
    return this[4].toBigInt();
  }

  get marginOut(): BigInt {
    return this[5].toBigInt();
  }

  get recipient(): Address {
    return this[6].toAddress();
  }

  get deadline(): BigInt {
    return this[7].toBigInt();
  }
}

export class IgniteCall extends ethereum.Call {
  get inputs(): IgniteCall__Inputs {
    return new IgniteCall__Inputs(this);
  }

  get outputs(): IgniteCall__Outputs {
    return new IgniteCall__Outputs(this);
  }
}

export class IgniteCall__Inputs {
  _call: IgniteCall;

  constructor(call: IgniteCall) {
    this._call = call;
  }

  get params(): IgniteCallParamsStruct {
    return changetype<IgniteCallParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class IgniteCall__Outputs {
  _call: IgniteCall;

  constructor(call: IgniteCall) {
    this._call = call;
  }

  get amountOut(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get rewards(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class IgniteCallParamsStruct extends ethereum.Tuple {
  get token0(): Address {
    return this[0].toAddress();
  }

  get token1(): Address {
    return this[1].toAddress();
  }

  get maintenance(): i32 {
    return this[2].toI32();
  }

  get oracle(): Address {
    return this[3].toAddress();
  }

  get tokenId(): BigInt {
    return this[4].toBigInt();
  }

  get amountOutMinimum(): BigInt {
    return this[5].toBigInt();
  }

  get recipient(): Address {
    return this[6].toAddress();
  }

  get deadline(): BigInt {
    return this[7].toBigInt();
  }
}

export class LockCall extends ethereum.Call {
  get inputs(): LockCall__Inputs {
    return new LockCall__Inputs(this);
  }

  get outputs(): LockCall__Outputs {
    return new LockCall__Outputs(this);
  }
}

export class LockCall__Inputs {
  _call: LockCall;

  constructor(call: LockCall) {
    this._call = call;
  }

  get params(): LockCallParamsStruct {
    return changetype<LockCallParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class LockCall__Outputs {
  _call: LockCall;

  constructor(call: LockCall) {
    this._call = call;
  }

  get margin(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class LockCallParamsStruct extends ethereum.Tuple {
  get token0(): Address {
    return this[0].toAddress();
  }

  get token1(): Address {
    return this[1].toAddress();
  }

  get maintenance(): i32 {
    return this[2].toI32();
  }

  get oracle(): Address {
    return this[3].toAddress();
  }

  get tokenId(): BigInt {
    return this[4].toBigInt();
  }

  get marginIn(): BigInt {
    return this[5].toBigInt();
  }

  get deadline(): BigInt {
    return this[6].toBigInt();
  }
}

export class MarginalV1AdjustCallbackCall extends ethereum.Call {
  get inputs(): MarginalV1AdjustCallbackCall__Inputs {
    return new MarginalV1AdjustCallbackCall__Inputs(this);
  }

  get outputs(): MarginalV1AdjustCallbackCall__Outputs {
    return new MarginalV1AdjustCallbackCall__Outputs(this);
  }
}

export class MarginalV1AdjustCallbackCall__Inputs {
  _call: MarginalV1AdjustCallbackCall;

  constructor(call: MarginalV1AdjustCallbackCall) {
    this._call = call;
  }

  get amount0Owed(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount1Owed(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class MarginalV1AdjustCallbackCall__Outputs {
  _call: MarginalV1AdjustCallbackCall;

  constructor(call: MarginalV1AdjustCallbackCall) {
    this._call = call;
  }
}

export class MarginalV1OpenCallbackCall extends ethereum.Call {
  get inputs(): MarginalV1OpenCallbackCall__Inputs {
    return new MarginalV1OpenCallbackCall__Inputs(this);
  }

  get outputs(): MarginalV1OpenCallbackCall__Outputs {
    return new MarginalV1OpenCallbackCall__Outputs(this);
  }
}

export class MarginalV1OpenCallbackCall__Inputs {
  _call: MarginalV1OpenCallbackCall;

  constructor(call: MarginalV1OpenCallbackCall) {
    this._call = call;
  }

  get amount0Owed(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount1Owed(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class MarginalV1OpenCallbackCall__Outputs {
  _call: MarginalV1OpenCallbackCall;

  constructor(call: MarginalV1OpenCallbackCall) {
    this._call = call;
  }
}

export class MarginalV1SettleCallbackCall extends ethereum.Call {
  get inputs(): MarginalV1SettleCallbackCall__Inputs {
    return new MarginalV1SettleCallbackCall__Inputs(this);
  }

  get outputs(): MarginalV1SettleCallbackCall__Outputs {
    return new MarginalV1SettleCallbackCall__Outputs(this);
  }
}

export class MarginalV1SettleCallbackCall__Inputs {
  _call: MarginalV1SettleCallbackCall;

  constructor(call: MarginalV1SettleCallbackCall) {
    this._call = call;
  }

  get amount0Delta(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount1Delta(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class MarginalV1SettleCallbackCall__Outputs {
  _call: MarginalV1SettleCallbackCall;

  constructor(call: MarginalV1SettleCallbackCall) {
    this._call = call;
  }
}

export class MintCall extends ethereum.Call {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get params(): MintCallParamsStruct {
    return changetype<MintCallParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get size(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }

  get debt(): BigInt {
    return this._call.outputValues[2].value.toBigInt();
  }

  get margin(): BigInt {
    return this._call.outputValues[3].value.toBigInt();
  }

  get fees(): BigInt {
    return this._call.outputValues[4].value.toBigInt();
  }

  get rewards(): BigInt {
    return this._call.outputValues[5].value.toBigInt();
  }
}

export class MintCallParamsStruct extends ethereum.Tuple {
  get token0(): Address {
    return this[0].toAddress();
  }

  get token1(): Address {
    return this[1].toAddress();
  }

  get maintenance(): i32 {
    return this[2].toI32();
  }

  get oracle(): Address {
    return this[3].toAddress();
  }

  get zeroForOne(): boolean {
    return this[4].toBoolean();
  }

  get sizeDesired(): BigInt {
    return this[5].toBigInt();
  }

  get sizeMinimum(): BigInt {
    return this[6].toBigInt();
  }

  get debtMaximum(): BigInt {
    return this[7].toBigInt();
  }

  get amountInMaximum(): BigInt {
    return this[8].toBigInt();
  }

  get sqrtPriceLimitX96(): BigInt {
    return this[9].toBigInt();
  }

  get margin(): BigInt {
    return this[10].toBigInt();
  }

  get recipient(): Address {
    return this[11].toAddress();
  }

  get deadline(): BigInt {
    return this[12].toBigInt();
  }
}

export class MulticallCall extends ethereum.Call {
  get inputs(): MulticallCall__Inputs {
    return new MulticallCall__Inputs(this);
  }

  get outputs(): MulticallCall__Outputs {
    return new MulticallCall__Outputs(this);
  }
}

export class MulticallCall__Inputs {
  _call: MulticallCall;

  constructor(call: MulticallCall) {
    this._call = call;
  }

  get data(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class MulticallCall__Outputs {
  _call: MulticallCall;

  constructor(call: MulticallCall) {
    this._call = call;
  }

  get results(): Array<Bytes> {
    return this._call.outputValues[0].value.toBytesArray();
  }
}

export class RefundETHCall extends ethereum.Call {
  get inputs(): RefundETHCall__Inputs {
    return new RefundETHCall__Inputs(this);
  }

  get outputs(): RefundETHCall__Outputs {
    return new RefundETHCall__Outputs(this);
  }
}

export class RefundETHCall__Inputs {
  _call: RefundETHCall;

  constructor(call: RefundETHCall) {
    this._call = call;
  }
}

export class RefundETHCall__Outputs {
  _call: RefundETHCall;

  constructor(call: RefundETHCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SweepETHCall extends ethereum.Call {
  get inputs(): SweepETHCall__Inputs {
    return new SweepETHCall__Inputs(this);
  }

  get outputs(): SweepETHCall__Outputs {
    return new SweepETHCall__Outputs(this);
  }
}

export class SweepETHCall__Inputs {
  _call: SweepETHCall;

  constructor(call: SweepETHCall) {
    this._call = call;
  }

  get amountMinimum(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SweepETHCall__Outputs {
  _call: SweepETHCall;

  constructor(call: SweepETHCall) {
    this._call = call;
  }
}

export class SweepTokenCall extends ethereum.Call {
  get inputs(): SweepTokenCall__Inputs {
    return new SweepTokenCall__Inputs(this);
  }

  get outputs(): SweepTokenCall__Outputs {
    return new SweepTokenCall__Outputs(this);
  }
}

export class SweepTokenCall__Inputs {
  _call: SweepTokenCall;

  constructor(call: SweepTokenCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amountMinimum(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get recipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class SweepTokenCall__Outputs {
  _call: SweepTokenCall;

  constructor(call: SweepTokenCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class UniswapV3SwapCallbackCall extends ethereum.Call {
  get inputs(): UniswapV3SwapCallbackCall__Inputs {
    return new UniswapV3SwapCallbackCall__Inputs(this);
  }

  get outputs(): UniswapV3SwapCallbackCall__Outputs {
    return new UniswapV3SwapCallbackCall__Outputs(this);
  }
}

export class UniswapV3SwapCallbackCall__Inputs {
  _call: UniswapV3SwapCallbackCall;

  constructor(call: UniswapV3SwapCallbackCall) {
    this._call = call;
  }

  get amount0Delta(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount1Delta(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class UniswapV3SwapCallbackCall__Outputs {
  _call: UniswapV3SwapCallbackCall;

  constructor(call: UniswapV3SwapCallbackCall) {
    this._call = call;
  }
}

export class UnwrapWETH9Call extends ethereum.Call {
  get inputs(): UnwrapWETH9Call__Inputs {
    return new UnwrapWETH9Call__Inputs(this);
  }

  get outputs(): UnwrapWETH9Call__Outputs {
    return new UnwrapWETH9Call__Outputs(this);
  }
}

export class UnwrapWETH9Call__Inputs {
  _call: UnwrapWETH9Call;

  constructor(call: UnwrapWETH9Call) {
    this._call = call;
  }

  get amountMinimum(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class UnwrapWETH9Call__Outputs {
  _call: UnwrapWETH9Call;

  constructor(call: UnwrapWETH9Call) {
    this._call = call;
  }
}
